!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BUFFER	cs1807-assign3-prog3-zcxaxy.c	20;"	d	file:
BubbleUp	min-max-heap.c	/^static void BubbleUp(MinMaxHeap *h, size_t position){$/;"	f	file:
BubbleUpMax	min-max-heap.c	/^static void BubbleUpMax(MinMaxHeap *h, size_t position){$/;"	f	file:
BubbleUpMin	min-max-heap.c	/^static void BubbleUpMin(MinMaxHeap *h, size_t position){$/;"	f	file:
CALLOC	common.h	15;"	d
DEBUG	cs1807-assign3-prog2-shaui.c	17;"	d	file:
LINESIZE	cs1807-assign3-prog1-xxaxy.c	22;"	d	file:
MALLOC	common.h	14;"	d
MAX	common.h	21;"	d
MIN	common.h	20;"	d
MinMaxHeap	min-max-heap.h	/^typedef struct MinMaxHeap{$/;"	s
MinMaxHeap	min-max-heap.h	/^}MinMaxHeap;$/;"	t	typeref:struct:MinMaxHeap
MinMaxHeapExtractMax	min-max-heap.c	/^void MinMaxHeapExtractMax(MinMaxHeap *h, void *outputptr){$/;"	f
MinMaxHeapExtractMin	min-max-heap.c	/^void MinMaxHeapExtractMin(MinMaxHeap *h, void *outputptr){$/;"	f
MinMaxHeapInsert	min-max-heap.c	/^void MinMaxHeapInsert(MinMaxHeap *h, const void *inputptr){$/;"	f
Node	scheduling-queue.h	/^typedef struct Node{$/;"	s
Node	scheduling-queue.h	/^}Node;$/;"	t	typeref:struct:Node
SchedulingQueue	scheduling-queue.h	/^typedef struct SchedulingQueue{$/;"	s
SchedulingQueue	scheduling-queue.h	/^}SchedulingQueue;$/;"	t	typeref:struct:SchedulingQueue
TrickleDown	min-max-heap.c	/^static void TrickleDown(MinMaxHeap *h, size_t position){$/;"	f	file:
TrickleDownMax	min-max-heap.c	/^static void TrickleDownMax(MinMaxHeap *h, size_t position){$/;"	f	file:
TrickleDownMin	min-max-heap.c	/^static void TrickleDownMin(MinMaxHeap *h, size_t position){$/;"	f	file:
WORDSIZE	cs1807-assign3-prog1-xxaxy.c	21;"	d	file:
_G_COMMON_H_	common.h	2;"	d
_G_COMMON_H_	min-max-heap.h	4;"	d
_G_COMMON_H_	scheduling-queue.h	4;"	d
_G_COMPARISION_H_	common.h	19;"	d
_G_MEMORY_ALLOCATION_H_	common.h	13;"	d
_G_PRINT_H_	common.h	25;"	d
_INIT_MAX_ELEMENTS_HEAP_	min-max-heap.h	18;"	d
__G_MIN_MAX_HEAP__	min-max-heap.h	16;"	d
brute_find_index_in_dictioary	cs1807-assign3-prog1-xxaxy.c	/^int brute_find_index_in_dictioary(char ** dict, int dict_size, char* word){$/;"	f
comparator	min-max-heap.h	/^    int (*comparator)(void*, size_t, size_t);$/;"	m	struct:MinMaxHeap
element_size	min-max-heap.h	/^    size_t element_size;$/;"	m	struct:MinMaxHeap
elements	min-max-heap.h	/^    void *elements;$/;"	m	struct:MinMaxHeap
elements	scheduling-queue.h	/^    Node *elements;$/;"	m	struct:SchedulingQueue
end	scheduling-queue.h	/^    unsigned int end;$/;"	m	struct:SchedulingQueue
extract	scheduling-queue.c	/^void extract(SchedulingQueue *q, Node *output_pointer){$/;"	f
float_comparator	min-max-heap.c	/^float float_comparator(void* array, size_t i, size_t j){$/;"	f
freeMinMaxHeap	min-max-heap.c	/^void freeMinMaxHeap(MinMaxHeap *h){$/;"	f
grandParent	min-max-heap.c	/^static size_t grandParent(MinMaxHeap *h, size_t position){$/;"	f	file:
growMinMaxHeap	min-max-heap.c	/^static void growMinMaxHeap(MinMaxHeap *h){$/;"	f	file:
growSchedulingQueue	scheduling-queue.c	/^static void growSchedulingQueue(SchedulingQueue *h){$/;"	f	file:
integer_comparator	min-max-heap.c	/^int integer_comparator(void* array, size_t i, size_t j){$/;"	f
leftChild	min-max-heap.c	/^static size_t leftChild(MinMaxHeap *h, size_t position){$/;"	f	file:
leftLeftGrandChild	min-max-heap.c	/^static size_t leftLeftGrandChild(MinMaxHeap *h, size_t position){$/;"	f	file:
leftRightGrandChild	min-max-heap.c	/^static size_t leftRightGrandChild(MinMaxHeap *h, size_t position){$/;"	f	file:
level	min-max-heap.c	/^static size_t level(size_t position){$/;"	f	file:
log_n_find_index_in_dictioary	cs1807-assign3-prog1-xxaxy.c	/^int log_n_find_index_in_dictioary(char ** dict, int dict_size, char* word){$/;"	f
main	cs1807-assign3-prog1-xxaxy.c	/^int main(int argc, char const *argv[]){$/;"	f
main	cs1807-assign3-prog2-shaui.c	/^int main(int argc, char const *argv[])$/;"	f
main	cs1807-assign3-prog3-zcxaxy.c	/^int main(int argc, char const *argv[])$/;"	f
max_elements	min-max-heap.h	/^    size_t max_elements;$/;"	m	struct:MinMaxHeap
max_elements	scheduling-queue.h	/^    unsigned int max_elements;$/;"	m	struct:SchedulingQueue
newMinMaxHeap	min-max-heap.c	/^MinMaxHeap *newMinMaxHeap(size_t element_size, int (*comparator)(void*, size_t, size_t)){$/;"	f
newSchedulingQueue	scheduling-queue.c	/^SchedulingQueue *newSchedulingQueue(unsigned int max_elements){$/;"	f
num_elements	min-max-heap.h	/^    size_t num_elements;$/;"	m	struct:MinMaxHeap
num_elements	scheduling-queue.h	/^    unsigned int num_elements;$/;"	m	struct:SchedulingQueue
number_of_lines_in_file	cs1807-assign3-prog1-xxaxy.c	/^int number_of_lines_in_file(char* file_name){$/;"	f
parent	min-max-heap.c	/^static size_t parent(MinMaxHeap *h, size_t position){$/;"	f	file:
pi	common.h	27;"	d
populate_dictionary	cs1807-assign3-prog1-xxaxy.c	/^int populate_dictionary(char* file_name, char** dict){$/;"	f
print_matrix	cs1807-assign3-prog1-xxaxy.c	/^void print_matrix(int** matrix, int dict_size){$/;"	f
print_string_array	cs1807-assign3-prog1-xxaxy.c	/^void print_string_array(char **array, int len){ $/;"	f
process_id	scheduling-queue.h	/^    int process_id;$/;"	m	struct:Node
ps	common.h	26;"	d
push_back	scheduling-queue.c	/^void push_back(SchedulingQueue *q, Node *input_pointer){$/;"	f
push_front	scheduling-queue.c	/^void push_front(SchedulingQueue *q, Node *input_pointer){$/;"	f
reduceMinMaxHeap	min-max-heap.c	/^static void reduceMinMaxHeap(MinMaxHeap *h){$/;"	f	file:
rightChild	min-max-heap.c	/^static size_t rightChild(MinMaxHeap *h, size_t position){$/;"	f	file:
rightLeftGrandChild	min-max-heap.c	/^static size_t rightLeftGrandChild(MinMaxHeap *h, size_t position){$/;"	f	file:
rightRightGrandChild	min-max-heap.c	/^static size_t rightRightGrandChild(MinMaxHeap *h, size_t position){$/;"	f	file:
start	scheduling-queue.h	/^    unsigned int start;$/;"	m	struct:SchedulingQueue
string_comparator	cs1807-assign3-prog1-xxaxy.c	/^int string_comparator(const void *a, const void *b){ $/;"	f
swap	min-max-heap.c	/^static void swap(MinMaxHeap *h, size_t i, size_t j){$/;"	f	file:
update_synonyms_antonyms_relation	cs1807-assign3-prog1-xxaxy.c	/^void update_synonyms_antonyms_relation(int** matrix, char** dict, int dict_size, char* file_name){$/;"	f
value	scheduling-queue.h	/^    int value;$/;"	m	struct:Node
